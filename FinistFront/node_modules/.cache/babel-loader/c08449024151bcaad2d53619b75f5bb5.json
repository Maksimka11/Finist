{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useDispatch } from 'react-redux';\nimport { setBankAccountAction } from './Redux/Reducers/BankAccountReducer';\nimport { setClientAction } from './Redux/Reducers/ClientReducer';\n\nfunction sendRequest(method, url) {\n  let body = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n    xhr.open(method, url, true);\n    xhr.responseType = 'json';\n    xhr.setRequestHeader('Content-Type', 'application/json');\n\n    xhr.onload = () => {\n      if (xhr.status >= 400) reject(xhr.response);else resolve(xhr.response);\n    };\n\n    xhr.onerror = () => {\n      reject(xhr.response);\n    };\n\n    xhr.send(JSON.stringify(body));\n  });\n}\n\nconst hostUrl = \"https://localhost:7132\";\nexport function validateLogin(login, password) {\n  return sendRequest(\"GET\", hostUrl + \"/User/validate/\" + login + \"/\" + password);\n}\nexport function getFavoriteTransactions(id) {\n  return sendRequest(\"GET\", hostUrl + \"/Favorite/\" + id);\n}\nexport function getBankAccounts(UserId) {\n  return sendRequest(\"GET\", hostUrl + \"/BankAccount/\" + id);\n}\nexport function getCards(accountId) {\n  return sendRequest(\"GET\", hostUrl + \"/BankAccount/\" + id);\n}\nexport function getDebetCards(accountId) {\n  return sendRequest(\"GET\", hostUrl + \"/Card/Credit/\" + id);\n}\nexport function getCreditCards(accountId) {\n  return sendRequest(\"GET\", hostUrl + \"/Card/Debet/\" + id);\n}\nexport function fillAllData(userId) {\n  _s();\n\n  const dispatch = useDispatch();\n  getClient(userId).then(res => {\n    dispatch(setClientAction(res));\n    getBankAccounts(res.id).then(res => {\n      dispatch(setBankAccountAction(res));\n    });\n  });\n}\n\n_s(fillAllData, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});","map":{"version":3,"names":["useDispatch","setBankAccountAction","setClientAction","sendRequest","method","url","body","Promise","resolve","reject","xhr","XMLHttpRequest","open","responseType","setRequestHeader","onload","status","response","onerror","send","JSON","stringify","hostUrl","validateLogin","login","password","getFavoriteTransactions","id","getBankAccounts","UserId","getCards","accountId","getDebetCards","getCreditCards","fillAllData","userId","dispatch","getClient","then","res"],"sources":["C:/Users/Максим/Desktop/FinistFront/src/HttpRequest.js"],"sourcesContent":["import {useDispatch} from 'react-redux';\r\nimport { setBankAccountAction } from './Redux/Reducers/BankAccountReducer';\r\nimport { setClientAction } from './Redux/Reducers/ClientReducer';\r\n\r\nfunction sendRequest(method, url, body = null) {\r\n    return new Promise( (resolve, reject) => {\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open(method, url, true);\r\n        xhr.responseType = 'json';\r\n        xhr.setRequestHeader('Content-Type', 'application/json');\r\n        xhr.onload = () => {\r\n            if (xhr.status >= 400)\r\n                reject(xhr.response);\r\n            else\r\n                resolve(xhr.response);\r\n        }\r\n        xhr.onerror = () => {\r\n            reject(xhr.response);\r\n        }\r\n        xhr.send(JSON.stringify(body));\r\n    })\r\n}\r\n\r\nconst hostUrl = \"https://localhost:7132\";\r\n\r\nexport function validateLogin(login, password) {\r\n    return sendRequest(\"GET\", hostUrl + \"/User/validate/\"+ login + \"/\" + password);    \r\n}\r\n\r\nexport function getFavoriteTransactions(id) {\r\n    return sendRequest(\"GET\", hostUrl + \"/Favorite/\"+ id);\r\n}\r\n\r\nexport function getBankAccounts(UserId) {\r\n    return sendRequest(\"GET\", hostUrl + \"/BankAccount/\"+ id);\r\n}\r\n\r\nexport function getCards(accountId) {\r\n    return sendRequest(\"GET\", hostUrl + \"/BankAccount/\"+ id);\r\n}\r\n\r\nexport function getDebetCards(accountId) {\r\n    return sendRequest(\"GET\", hostUrl + \"/Card/Credit/\"+ id);\r\n}\r\n\r\nexport function getCreditCards (accountId) {\r\n    return sendRequest(\"GET\", hostUrl + \"/Card/Debet/\"+ id);\r\n}\r\n\r\nexport function fillAllData(userId) {\r\n    const dispatch = useDispatch();\r\n    getClient(userId)\r\n    .then ((res) => {\r\n        dispatch(setClientAction(res));\r\n        getBankAccounts(res.id)\r\n        .then ( (res) => {\r\n            dispatch(setBankAccountAction(res))\r\n        })\r\n    })\r\n}\r\n"],"mappings":";;AAAA,SAAQA,WAAR,QAA0B,aAA1B;AACA,SAASC,oBAAT,QAAqC,qCAArC;AACA,SAASC,eAAT,QAAgC,gCAAhC;;AAEA,SAASC,WAAT,CAAqBC,MAArB,EAA6BC,GAA7B,EAA+C;EAAA,IAAbC,IAAa,uEAAN,IAAM;EAC3C,OAAO,IAAIC,OAAJ,CAAa,CAACC,OAAD,EAAUC,MAAV,KAAqB;IACrC,MAAMC,GAAG,GAAG,IAAIC,cAAJ,EAAZ;IACAD,GAAG,CAACE,IAAJ,CAASR,MAAT,EAAiBC,GAAjB,EAAsB,IAAtB;IACAK,GAAG,CAACG,YAAJ,GAAmB,MAAnB;IACAH,GAAG,CAACI,gBAAJ,CAAqB,cAArB,EAAqC,kBAArC;;IACAJ,GAAG,CAACK,MAAJ,GAAa,MAAM;MACf,IAAIL,GAAG,CAACM,MAAJ,IAAc,GAAlB,EACIP,MAAM,CAACC,GAAG,CAACO,QAAL,CAAN,CADJ,KAGIT,OAAO,CAACE,GAAG,CAACO,QAAL,CAAP;IACP,CALD;;IAMAP,GAAG,CAACQ,OAAJ,GAAc,MAAM;MAChBT,MAAM,CAACC,GAAG,CAACO,QAAL,CAAN;IACH,CAFD;;IAGAP,GAAG,CAACS,IAAJ,CAASC,IAAI,CAACC,SAAL,CAAef,IAAf,CAAT;EACH,CAfM,CAAP;AAgBH;;AAED,MAAMgB,OAAO,GAAG,wBAAhB;AAEA,OAAO,SAASC,aAAT,CAAuBC,KAAvB,EAA8BC,QAA9B,EAAwC;EAC3C,OAAOtB,WAAW,CAAC,KAAD,EAAQmB,OAAO,GAAG,iBAAV,GAA6BE,KAA7B,GAAqC,GAArC,GAA2CC,QAAnD,CAAlB;AACH;AAED,OAAO,SAASC,uBAAT,CAAiCC,EAAjC,EAAqC;EACxC,OAAOxB,WAAW,CAAC,KAAD,EAAQmB,OAAO,GAAG,YAAV,GAAwBK,EAAhC,CAAlB;AACH;AAED,OAAO,SAASC,eAAT,CAAyBC,MAAzB,EAAiC;EACpC,OAAO1B,WAAW,CAAC,KAAD,EAAQmB,OAAO,GAAG,eAAV,GAA2BK,EAAnC,CAAlB;AACH;AAED,OAAO,SAASG,QAAT,CAAkBC,SAAlB,EAA6B;EAChC,OAAO5B,WAAW,CAAC,KAAD,EAAQmB,OAAO,GAAG,eAAV,GAA2BK,EAAnC,CAAlB;AACH;AAED,OAAO,SAASK,aAAT,CAAuBD,SAAvB,EAAkC;EACrC,OAAO5B,WAAW,CAAC,KAAD,EAAQmB,OAAO,GAAG,eAAV,GAA2BK,EAAnC,CAAlB;AACH;AAED,OAAO,SAASM,cAAT,CAAyBF,SAAzB,EAAoC;EACvC,OAAO5B,WAAW,CAAC,KAAD,EAAQmB,OAAO,GAAG,cAAV,GAA0BK,EAAlC,CAAlB;AACH;AAED,OAAO,SAASO,WAAT,CAAqBC,MAArB,EAA6B;EAAA;;EAChC,MAAMC,QAAQ,GAAGpC,WAAW,EAA5B;EACAqC,SAAS,CAACF,MAAD,CAAT,CACCG,IADD,CACQC,GAAD,IAAS;IACZH,QAAQ,CAAClC,eAAe,CAACqC,GAAD,CAAhB,CAAR;IACAX,eAAe,CAACW,GAAG,CAACZ,EAAL,CAAf,CACCW,IADD,CACSC,GAAD,IAAS;MACbH,QAAQ,CAACnC,oBAAoB,CAACsC,GAAD,CAArB,CAAR;IACH,CAHD;EAIH,CAPD;AAQH;;GAVeL,W;UACKlC,W"},"metadata":{},"sourceType":"module"}